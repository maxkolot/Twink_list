# statistics.py

from models.channel import Channel
from models.user import User

async def get_total_list_audience():
    channels = await Channel.filter(status__in=['free', 'vip'])
    total_audience = 0
    for channel in channels:
        total_audience += channel.subscribers_count
    return total_audience

async def get_total_bot_audience():
    total_users = await User.filter(status='active').count()
    return total_users

async def generate_list_preview(lang='ru'):
    # –õ–æ–≥–∏–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ª–∏—Å—Ç–∞
    channels = await Channel.filter(status__in=['free', 'vip']).order_by('-subscribers_count')
    list_text = "–ê–∫—Ç—É–∞–ª—å–Ω—ã–π –ª–∏—Å—Ç:\n\n"
    for channel in channels:
        list_text += f"üîó {channel.name} ({channel.link})\n"
    return list_text

from models.channel_statistic import ChannelStatistic
from models.channel import Channel
from datetime import date

async def update_statistics():
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫–∞–Ω–∞–ª–æ–≤"""
    channels = await Channel.filter(status__in=['free', 'vip'])
    
    for channel in channels:
        # –ü—Ä–∏–º–µ—Ä –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ (–Ω—É–∂–Ω–æ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å —Å API Telegram –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤)
        current_subscribers = channel.subscribers_count  # –ó–∞–≥–ª—É—à–∫–∞
        await ChannelStatistic.create(
            channel=channel,
            date=date.today(),
            subscribers_count=current_subscribers,
            joins_from_bot=0,  # –ó–∞–≥–ª—É—à–∫–∞
            joins_from_list=0  # –ó–∞–≥–ª—É—à–∫–∞
        )
